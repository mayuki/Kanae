@using System.Security.Claims
@using Microsoft.AspNet.Identity
@{
    var userName = User.Identity.Name;
    if (User.Identity is ClaimsIdentity)
    {
        var givenName = ((ClaimsIdentity)User.Identity).Claims.Where(x => x.Type == ClaimTypes.GivenName).Select(x => x.Value).FirstOrDefault();
        var surName = ((ClaimsIdentity)User.Identity).Claims.Where(x => x.Type == ClaimTypes.Surname).Select(x => x.Value).FirstOrDefault();
        if (givenName != null || surName != null)
        {
            userName = String.Format("{0} {1}", givenName, surName);
        }
    }
}
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li class="@(IsCurrentController("Account") ? "active" : "")">
                @Html.ActionLink(userName, "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })
            </li>
            @if (!Utility.IsWindowsAuthenticationEnabled(User.Identity))
            {
                <li><a href="javascript:document.getElementById('logoutForm').submit()">Sign out</a></li>
            }
        </ul>
    }
}
else
{
    if (!Utility.IsWindowsAuthenticationEnabled(User.Identity))
    {
        <ul class="nav navbar-nav navbar-right">
            <li class="@(IsCurrentController("Account", "Login") ? "active" : "")">@Html.ActionLink("Sign in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
        </ul>
    }
}
